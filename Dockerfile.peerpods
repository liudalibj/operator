# Golang image and version (defaults are provided).
# Use e.g. `golang` for multi-arch support.
ARG IMG_NAME
ARG IMG_VERSION

# Build the manager binary
FROM ${IMG_NAME:-golang}:${IMG_VERSION:-1.20} as builder

WORKDIR /work
# Copy the Go Modules manifests
COPY go.mod go.mod
COPY go.sum go.sum
# cache deps before building and copying source so that we don't need to re-download as much
# and so that source changes don't invalidate our downloaded layer
RUN go mod download

# Copy the go source
COPY main.go main.go
COPY api/ api/
COPY controllers/ controllers/

# The container running the operator/controllers needs the libvirt libraries as
# as the peerpod-ctrl needs to dynamically link with libvirt
RUN apt-get update -y && apt-get install -y libvirt-dev

# Build
RUN CGO_ENABLED=1 GOOS=linux go build -a -o manager main.go

# Libvirt cannot be installed to distroless for packaging so remove it for now
# Use distroless as minimal base image to package the manager binary
# Refer to https://github.com/GoogleContainerTools/distroless for more details
# FROM gcr.io/distroless/static:nonroot

FROM ${IMG_NAME:-golang}:${IMG_VERSION:-1.20}
RUN apt-get update -y && apt-get install -y libvirt-dev
WORKDIR /
COPY --from=builder /work/manager .

ENTRYPOINT ["/manager"]
